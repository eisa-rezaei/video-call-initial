{"version":3,"sources":["components/Login/style.js","components/Login/index.jsx"],"names":["fadeBtn","keyframes","_templateObject","_taggedTemplateLiteral","fadeBtn2","_templateObject2","StLoginPageContainer","styled","article","_templateObject3","StLoginBackGround","div","_templateObject4","StLoginPageImage","section","_templateObject5","props","isLogin","StLoginPageImageTextPart","_templateObject6","StLoginPageLogin","_templateObject7","StLoginPageLoginInputs","form","_templateObject8","StLoginPageLoginInputFromControl","_templateObject9","StLoginPageLoginInput","input","_templateObject10","Login","_useState","useState","_useState2","_slicedToArray","setIsLogin","navigate","useNavigate","initialValues","email","password","name","validationSchema","Yup","required","min","matches","formik","useFormik","onSubmit","values","localStorage","setItem","JSON","stringify","_jsxs","children","_jsx","onClick","prev","handleSubmit","htmlFor","_objectSpread","type","id","placeholder","getFieldProps","errors","touched"],"mappings":"oNAEMA,EAAUC,YAASC,MAAAC,YAAA,6GAKnBC,EAAWH,YAASI,MAAAF,YAAA,2GAMbG,EAAuBC,IAAOC,QAAOC,MAAAN,YAAA,uKAUrCO,EAAoBH,IAAOI,IAAGC,MAAAT,YAAA,+tEA6G9BU,EAAmBN,IAAOO,QAAOC,MAAAZ,YAAA,wPASxB,SAACa,GAAK,OAAMA,EAAMC,QAAU,UAAY,SAAS,IAC9C,SAACD,GAAK,OAC3BA,EAAMC,QACF,mDACA,kDAAkD,IAC3C,SAACD,GAAK,OACjBA,EAAMC,QAAU,iBAAmB,kBAAkB,IAG5CC,EAA2BX,IAAOI,IAAGQ,MAAAhB,YAAA,gkBASnC,SAACa,GAAK,OAAMA,EAAMC,QAAUjB,EAAUI,CAAQ,IAW5C,SAACY,GAAK,OAAMA,EAAMC,QAAUb,EAAWJ,CAAO,IAYlDoB,EAAmBb,IAAOO,QAAOO,MAAAlB,YAAA,+QAO/B,SAACa,GAAK,OACjBA,EAAMC,QAAU,iBAAmB,mBAAmB,IAG3C,SAACD,GAAK,OAAMA,EAAMC,QAAU,IAAM,GAAG,IAClC,SAACD,GAAK,OAAMA,EAAMC,QAAU,SAAW,SAAS,IAIrDK,EAAyBf,IAAOgB,KAAIC,MAAArB,YAAA,6iBAGjC,SAACa,GAAK,OAAMA,EAAMC,QAAU,SAAW,GAAG,IAclC,SAACD,GAAK,OAAMA,EAAMC,QAAU,UAAY,SAAS,IAGvD,SAACD,GAAK,OAAMA,EAAMC,QAAU,OAAS,GAAG,IAI3C,SAACD,GAAK,OAAMA,EAAMC,QAAU,IAAM,GAAG,IAGvCQ,EAAmClB,IAAOI,IAAGe,MAAAvB,YAAA,kOAc7CwB,EAAwBpB,IAAOqB,MAAKC,MAAA1B,YAAA,4KAQzC,SAACa,GAAK,OAAMA,EAAMC,QAAU,UAAY,SAAS,I,OCzG1Ca,UA/HD,WACZ,IAAAC,EAA8BC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAArCd,EAAOgB,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EAAWC,cACXC,EAAgBrB,EAClB,CACEsB,MAAO,GACPC,SAAU,IAEZ,CACEC,KAAM,GACNF,MAAO,GACPC,SAAU,IAMVE,EAAmBC,IACvB1B,EACI,CACEsB,MAAOI,MACJJ,MAAM,wBACNK,SAAS,0BACZJ,SAAUG,MACPC,SAAS,yBACTC,IAAI,EAAG,sDACPC,QAAQ,WAAY,6CAEzB,CACEL,KAAME,MAAaC,SAAS,0BAC5BL,MAAOI,MACJJ,MAAM,wBACNK,SAAS,0BACZJ,SAAUG,MACPC,SAAS,yBACTC,IAAI,EAAG,sDACPC,QAAQ,WAAY,8CAIzBC,EAASC,YAAU,CAAEV,gBAAeW,SA3BzB,SAACC,GAChBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,IAC5Cd,EAAS,IACX,EAwBoDM,qBAEpD,OACEa,eAACjD,EAAoB,CAAAkD,SAAA,CACnBD,eAAC7C,EAAiB,CAAA8C,SAAA,CAChBC,cAAA,WACAA,cAAA,WACAA,cAAA,WACAA,cAAA,WACAA,cAAA,WACAA,cAAA,WACAA,cAAA,WACAA,cAAA,WACAA,cAAA,WACAA,cAAA,cAEFA,cAAC5C,EAAgB,CAACI,QAASA,EAAQuC,SACjCD,eAACrC,EAAwB,CAACD,QAASA,EAAQuC,SAAA,CACzCC,cAAA,MAAAD,SACGvC,EAAU,yBAA2B,6BAExCwC,cAAA,MAAAD,SAAKvC,EAAU,UAAY,YAC3BwC,cAAA,KAAAD,SACGvC,EACG,4EACA,sDAENwC,cAAA,UAAQC,QAAS,kBAAMvB,GAAW,SAACwB,GAAI,OAAMA,CAAI,GAAC,EAACH,SAChDvC,EAAU,UAAY,iBAI7BwC,cAACrC,EAAgB,CAACH,QAASA,EAAQuC,SACjCD,eAACjC,EAAsB,CACrB2B,SAAUF,EAAOa,aACjB3C,QAASA,EAAQuC,SAAA,CAEjBD,eAAC9B,EAAgC,CAAA+B,SAAA,CAC/BC,cAAA,SAAOI,QAAQ,OAAML,SAAC,UACtBC,cAAC9B,EAAqBmC,YAAA,CACpBC,KAAK,OACLC,GAAG,OACHvB,KAAK,OACLwB,YAAY,QACRlB,EAAOmB,cAAc,UAE1BnB,EAAOoB,OAAO1B,OAASxB,EACtBwC,cAAA,KAAAD,SAAIT,EAAOoB,OAAO1B,OAChB,QAGNc,eAAC9B,EAAgC,CAAA+B,SAAA,CAC/BC,cAAA,SAAOI,QAAQ,QAAOL,SAAC,WACvBC,cAAC9B,EAAqBmC,wBAAA,CACpBC,KAAK,QACLC,GAAG,QACHvB,KAAK,QACLwB,YAAY,SACRlB,EAAOmB,cAAc,UAAQ,IACjCjD,QAASA,KAEV8B,EAAOqB,QAAQ7B,OAASQ,EAAOoB,OAAO5B,MACrCkB,cAAA,KAAAD,SAAIT,EAAOoB,OAAO5B,QAChB,QAENgB,eAAC9B,EAAgC,CAAA+B,SAAA,CAC/BC,cAAA,SAAOI,QAAQ,WAAUL,SAAC,cAC1BC,cAAC9B,EAAqBmC,wBAAA,CACpBC,KAAK,WACLC,GAAG,WACHvB,KAAK,WACLwB,YAAY,YACRlB,EAAOmB,cAAc,aAAW,IACpCjD,QAASA,KAEV8B,EAAOqB,QAAQ5B,UAAYO,EAAOoB,OAAO3B,SACxCiB,cAAA,KAAAD,SAAIT,EAAOoB,OAAO3B,WAChB,QAENiB,cAAA,MAAAD,SAAI,oBACJD,eAAA,UAAQQ,KAAK,SAAQP,SAAA,CAAC,IAAEvC,EAAU,SAAW,UAAU,cAKjE,C","file":"static/js/7.078b2e47.chunk.js","sourcesContent":["import styled, { keyframes } from \"styled-components\";\n\nconst fadeBtn = keyframes`\n0%{transform:translateX(-130%)}\n10%{transform:translateX(-150%)}\n100%{transform:translateX(0%)}\n`;\nconst fadeBtn2 = keyframes`\n0%{transform:translateX(130%)}\n10%{transform:translateX(150%)}\n100%{transform:translateX(0%)}\n`;\n\nexport const StLoginPageContainer = styled.article`\n  width: 100%;\n  min-height: 95vh;\n  background-color: #fff;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StLoginBackGround = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  & span {\n    min-width: 100px;\n    min-height: 100px;\n    background-color: #ffffff20;\n    position: absolute;\n    z-index: 3;\n    :nth-child(1) {\n      width: 150px;\n      height: 200px;\n      top: -50px;\n      left: -50px;\n      transform: rotate(-55deg);\n    }\n    :nth-child(2) {\n      width: 150px;\n      height: 250x;\n      top: 100px;\n      left: 400px;\n      transform: rotate(95deg);\n      clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n    }\n    :nth-child(3) {\n      top: 300px;\n      right: 300px;\n      transform: rotate(-25deg);\n    }\n    :nth-child(4) {\n      top: 100px;\n      right: 500px;\n      width: 150px;\n      transform: rotate(-25deg);\n      clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n    }\n    :nth-child(5) {\n      width: 100px;\n      height: 100px;\n      right: 50px;\n      bottom: 100px;\n      transform: rotate(35deg);\n      clip-path: polygon(\n        0% 15%,\n        44% 46%,\n        15% 0%,\n        85% 0%,\n        59% 47%,\n        100% 15%,\n        100% 85%,\n        58% 58%,\n        85% 100%,\n        15% 100%,\n        45% 58%,\n        0% 85%\n      );\n    }\n    :nth-child(6) {\n      width: 200px;\n      height: 200px;\n      left: 450px;\n      bottom: 100px;\n      transform: rotate(-35deg);\n      clip-path: polygon(\n        50% 0%,\n        61% 35%,\n        98% 35%,\n        68% 57%,\n        79% 91%,\n        50% 70%,\n        21% 91%,\n        32% 57%,\n        2% 35%,\n        39% 35%\n      );\n    }\n    :nth-child(7) {\n      width: 300px;\n      height: 300px;\n      left: 0px;\n      bottom: -200px;\n      transform: rotate(-25deg);\n    }\n    :nth-child(8) {\n      width: 300px;\n      height: 300px;\n      right: -150px;\n      top: -150px;\n      clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n    }\n    :nth-child(9) {\n      width: 300px;\n      height: 250px;\n      right: 400px;\n      bottom: -100px;\n      clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n    }\n    :nth-child(10) {\n      width: 300px;\n      height: 250px;\n      left: -150px;\n      top: 250px;\n      transform: rotate(-25deg);\n      clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n    }\n  }\n`;\n\nexport const StLoginPageImage = styled.section`\n  width: 50%;\n  height: 100%;\n  z-index: 2;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 1s ease;\n  background-color: ${(props) => (props.isLogin ? \"#3bb78f\" : \"#63afff\")};\n  /* background-image: ${(props) =>\n    props.isLogin\n      ? \"linear-gradient(315deg, #3bb78f 0%, #0bab64 74%)\"\n      : \"linear-gradient(315deg, #f39f86 0%, #f9d976 74%)\"}; */\n  transform: ${(props) =>\n    props.isLogin ? \"translateX(0%)\" : \"translateX(100%)\"};\n`;\n\nexport const StLoginPageImageTextPart = styled.div`\n  width: 480px;\n  height: 400px;\n  display: flex;\n  text-align: center;\n  align-items: center;\n  flex-direction: column;\n  transition: all 1s linear;\n  justify-content: space-between;\n  animation: ${(props) => (props.isLogin ? fadeBtn : fadeBtn2)} 1s;\n\n  & button {\n    width: 80%;\n    min-height: 50px;\n    margin: 20px;\n    border-radius: 30px;\n    color: #fff;\n    padding: 20px 30px;\n    border: 1px solid #fff;\n    transition: all 1s ease;\n    animation: ${(props) => (props.isLogin ? fadeBtn2 : fadeBtn)} 1s;\n  }\n  & h1 {\n    font-size: 2rem;\n    margin: 10px 0;\n  }\n  & p {\n    font-size: 1.1rem;\n    line-height: 40px;\n  }\n`;\n\nexport const StLoginPageLogin = styled.section`\n  width: 50%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 1s 0.2s ease;\n  transform: ${(props) =>\n    props.isLogin ? \"translateX(0%)\" : \"translateX(-100%)\"};\n  & div:nth-child(1) {\n    transition: all 0.4s 0.4s ease;\n    opacity: ${(props) => (props.isLogin ? \"0\" : \"1\")};\n    visibility: ${(props) => (props.isLogin ? \"hidden\" : \"visible\")};\n  }\n`;\n\nexport const StLoginPageLoginInputs = styled.form`\n  width: 500px;\n  height: 520px;\n  margin-top: ${(props) => (props.isLogin ? \"-100px\" : \"0\")};\n  display: flex;\n  flex-direction: column;\n  border-radius: 20px;\n  transition: all 0.5s ease;\n  justify-content: space-around;\n  z-index: 5;\n  & button {\n    width: 500px;\n    color: #fff;\n    min-height: 50px;\n    padding: 15px 0;\n    border-radius: 10px;\n    transition: all 1s ease;\n    background-color: ${(props) => (props.isLogin ? \"#3bb78f\" : \"#63afff\")};\n  }\n  & h4 {\n    margin-top: ${(props) => (props.isLogin ? \"20px\" : \"0\")};\n    text-transform: capitalize;\n    text-decoration: underline;\n    transition: all 0.1s 0.4s ease;\n    opacity: ${(props) => (props.isLogin ? \"1\" : \"0\")};\n  }\n`;\nexport const StLoginPageLoginInputFromControl = styled.div`\n  width: 100%;\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  & p {\n    font-size: 0.8rem;\n    color: #ff9090;\n    margin-top: 10px;\n    text-align: right;\n  }\n`;\n\nexport const StLoginPageLoginInput = styled.input`\n  width: 100%;\n  margin-top: 10px;\n  padding: 10px;\n  border-bottom: 3px solid #ededed;\n  :focus,\n  :hover {\n    border-bottom: 3px solid\n      ${(props) => (props.isLogin ? \"#89c4b2\" : \"#7ba4c4\")};\n  }\n`;\n","import { useFormik } from \"formik\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport {\n  StLoginBackGround,\n  StLoginPageContainer,\n  StLoginPageImage,\n  StLoginPageImageTextPart,\n  StLoginPageLogin,\n  StLoginPageLoginInput,\n  StLoginPageLoginInputFromControl,\n  StLoginPageLoginInputs,\n} from \"./style\";\n\nconst Login = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const navigate = useNavigate();\n  const initialValues = isLogin\n    ? {\n        email: \"\",\n        password: \"\",\n      }\n    : {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n      };\n  const onSubmit = (values) => {\n    localStorage.setItem(\"user\", JSON.stringify(values));\n    navigate(\"/\");\n  };\n  const validationSchema = Yup.object(\n    isLogin\n      ? {\n          email: Yup.string()\n            .email(\"Invalid email format\")\n            .required(\"This feild is Required\"),\n          password: Yup.string()\n            .required(\"No password provided.\")\n            .min(8, \"Password is too short - should be 8 chars minimum.\")\n            .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\"),\n        }\n      : {\n          name: Yup.string().required(\"This feild is Required\"),\n          email: Yup.string()\n            .email(\"Invalid email format\")\n            .required(\"This feild is Required\"),\n          password: Yup.string()\n            .required(\"No password provided.\")\n            .min(8, \"Password is too short - should be 8 chars minimum.\")\n            .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\"),\n        }\n  );\n\n  const formik = useFormik({ initialValues, onSubmit, validationSchema });\n\n  return (\n    <StLoginPageContainer>\n      <StLoginBackGround>\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n      </StLoginBackGround>\n      <StLoginPageImage isLogin={isLogin}>\n        <StLoginPageImageTextPart isLogin={isLogin}>\n          <h1>\n            {isLogin ? \"Good to see You Again \" : \"Welcome to Our Platform \"}\n          </h1>\n          <h1>{isLogin ? \"Sign In\" : \"Sign Up\"}</h1>\n          <p>\n            {isLogin\n              ? \"Hi, Welcome back good to see you here again! Try to keep your info secret\"\n              : \"Enter your personal info to be connected with us!\"}\n          </p>\n          <button onClick={() => setIsLogin((prev) => !prev)}>\n            {isLogin ? \"Sign In\" : \"Sign Up\"}\n          </button>\n        </StLoginPageImageTextPart>\n      </StLoginPageImage>\n      <StLoginPageLogin isLogin={isLogin}>\n        <StLoginPageLoginInputs\n          onSubmit={formik.handleSubmit}\n          isLogin={isLogin}\n        >\n          <StLoginPageLoginInputFromControl>\n            <label htmlFor=\"name\">Name:</label>\n            <StLoginPageLoginInput\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Name\"\n              {...formik.getFieldProps(\"name\")}\n            />\n            {formik.errors.name && !isLogin ? (\n              <p>{formik.errors.name}</p>\n            ) : null}\n          </StLoginPageLoginInputFromControl>\n\n          <StLoginPageLoginInputFromControl>\n            <label htmlFor=\"email\">Email:</label>\n            <StLoginPageLoginInput\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              {...formik.getFieldProps(\"email\")}\n              isLogin={isLogin}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <p>{formik.errors.email}</p>\n            ) : null}\n          </StLoginPageLoginInputFromControl>\n          <StLoginPageLoginInputFromControl>\n            <label htmlFor=\"password\">Password:</label>\n            <StLoginPageLoginInput\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              {...formik.getFieldProps(\"password\")}\n              isLogin={isLogin}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <p>{formik.errors.password}</p>\n            ) : null}\n          </StLoginPageLoginInputFromControl>\n          <h4>forgot password</h4>\n          <button type=\"submit\"> {isLogin ? \"Log In\" : \"Sign In\"} </button>\n        </StLoginPageLoginInputs>\n      </StLoginPageLogin>\n    </StLoginPageContainer>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}